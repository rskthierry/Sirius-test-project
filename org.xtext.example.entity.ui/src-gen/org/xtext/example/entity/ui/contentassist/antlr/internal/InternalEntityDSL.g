/*
* generated by Xtext
*/
grammar InternalEntityDSL;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.xtext.example.entity.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.entity.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.entity.services.EntityDSLGrammarAccess;

}

@parser::members {
 
 	private EntityDSLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(EntityDSLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleNamespaceDefinition
entryRuleNamespaceDefinition 
:
{ before(grammarAccess.getNamespaceDefinitionRule()); }
	 ruleNamespaceDefinition
{ after(grammarAccess.getNamespaceDefinitionRule()); } 
	 EOF 
;

// Rule NamespaceDefinition
ruleNamespaceDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamespaceDefinitionAccess().getGroup()); }
(rule__NamespaceDefinition__Group__0)
{ after(grammarAccess.getNamespaceDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNamespaceDeclaration
entryRuleNamespaceDeclaration 
:
{ before(grammarAccess.getNamespaceDeclarationRule()); }
	 ruleNamespaceDeclaration
{ after(grammarAccess.getNamespaceDeclarationRule()); } 
	 EOF 
;

// Rule NamespaceDeclaration
ruleNamespaceDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamespaceDeclarationAccess().getGroup()); }
(rule__NamespaceDeclaration__Group__0)
{ after(grammarAccess.getNamespaceDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifedName
entryRuleQualifedName 
:
{ before(grammarAccess.getQualifedNameRule()); }
	 ruleQualifedName
{ after(grammarAccess.getQualifedNameRule()); } 
	 EOF 
;

// Rule QualifedName
ruleQualifedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifedNameAccess().getGroup()); }
(rule__QualifedName__Group__0)
{ after(grammarAccess.getQualifedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleEntity
entryRuleEntity 
:
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEntityAccess().getGroup()); }
(rule__Entity__Group__0)
{ after(grammarAccess.getEntityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttribute
entryRuleAttribute 
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeAccess().getGroup()); }
(rule__Attribute__Group__0)
{ after(grammarAccess.getAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NamespaceDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespaceDefinition__Group__0__Impl
	rule__NamespaceDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceDefinitionAccess().getNamespaceAssignment_0()); }
(rule__NamespaceDefinition__NamespaceAssignment_0)
{ after(grammarAccess.getNamespaceDefinitionAccess().getNamespaceAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamespaceDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespaceDefinition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceDefinitionAccess().getEntitiesAssignment_1()); }
(rule__NamespaceDefinition__EntitiesAssignment_1)
{ after(grammarAccess.getNamespaceDefinitionAccess().getEntitiesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NamespaceDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespaceDeclaration__Group__0__Impl
	rule__NamespaceDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceDeclarationAccess().getNamespaceKeyword_0()); }

	'namespace' 

{ after(grammarAccess.getNamespaceDeclarationAccess().getNamespaceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamespaceDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespaceDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceDeclarationAccess().getNameAssignment_1()); }
(rule__NamespaceDeclaration__NameAssignment_1)
{ after(grammarAccess.getNamespaceDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifedName__Group__0__Impl
	rule__QualifedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQualifedNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifedNameAccess().getGroup_1()); }
(rule__QualifedName__Group_1__0)*
{ after(grammarAccess.getQualifedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifedName__Group_1__0__Impl
	rule__QualifedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifedNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQualifedNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Entity__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__0__Impl
	rule__Entity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getAbstractAssignment_0()); }
(rule__Entity__AbstractAssignment_0)?
{ after(grammarAccess.getEntityAccess().getAbstractAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__1__Impl
	rule__Entity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getEntityKeyword_1()); }

	'entity' 

{ after(grammarAccess.getEntityAccess().getEntityKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__2__Impl
	rule__Entity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getNameAssignment_2()); }
(rule__Entity__NameAssignment_2)
{ after(grammarAccess.getEntityAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__3__Impl
	rule__Entity__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getGroup_3()); }
(rule__Entity__Group_3__0)?
{ after(grammarAccess.getEntityAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__4__Impl
	rule__Entity__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__5__Impl
	rule__Entity__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getAttributesAssignment_5()); }
(rule__Entity__AttributesAssignment_5)*
{ after(grammarAccess.getEntityAccess().getAttributesAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Entity__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group_3__0__Impl
	rule__Entity__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getExtendsKeyword_3_0()); }

	'extends' 

{ after(grammarAccess.getEntityAccess().getExtendsKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getParentAssignment_3_1()); }
(rule__Entity__ParentAssignment_3_1)
{ after(grammarAccess.getEntityAccess().getParentAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Attribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getAttributeKeyword_0()); }

	'attribute' 

{ after(grammarAccess.getAttributeAccess().getAttributeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__1__Impl
	rule__Attribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getNameAssignment_1()); }
(rule__Attribute__NameAssignment_1)
{ after(grammarAccess.getAttributeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getGroup_2()); }
(rule__Attribute__Group_2__0)?
{ after(grammarAccess.getAttributeAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Attribute__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_2__0__Impl
	rule__Attribute__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getColonKeyword_2_0()); }

	':' 

{ after(grammarAccess.getAttributeAccess().getColonKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getTypeAssignment_2_1()); }
(rule__Attribute__TypeAssignment_2_1)
{ after(grammarAccess.getAttributeAccess().getTypeAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__NamespaceDefinition__NamespaceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceDefinitionAccess().getNamespaceNamespaceDeclarationParserRuleCall_0_0()); }
	ruleNamespaceDeclaration{ after(grammarAccess.getNamespaceDefinitionAccess().getNamespaceNamespaceDeclarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceDefinition__EntitiesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceDefinitionAccess().getEntitiesEntityParserRuleCall_1_0()); }
	ruleEntity{ after(grammarAccess.getNamespaceDefinitionAccess().getEntitiesEntityParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceDeclarationAccess().getNameQualifedNameParserRuleCall_1_0()); }
	ruleQualifedName{ after(grammarAccess.getNamespaceDeclarationAccess().getNameQualifedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__AbstractAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getAbstractAbstractKeyword_0_0()); }
(
{ before(grammarAccess.getEntityAccess().getAbstractAbstractKeyword_0_0()); }

	'abstract' 

{ after(grammarAccess.getEntityAccess().getAbstractAbstractKeyword_0_0()); }
)

{ after(grammarAccess.getEntityAccess().getAbstractAbstractKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__ParentAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getParentEntityCrossReference_3_1_0()); }
(
{ before(grammarAccess.getEntityAccess().getParentEntityIDTerminalRuleCall_3_1_0_1()); }
	RULE_ID{ after(grammarAccess.getEntityAccess().getParentEntityIDTerminalRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getEntityAccess().getParentEntityCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__AttributesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getAttributesAttributeParserRuleCall_5_0()); }
	ruleAttribute{ after(grammarAccess.getEntityAccess().getAttributesAttributeParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__TypeAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getTypeEntityCrossReference_2_1_0()); }
(
{ before(grammarAccess.getAttributeAccess().getTypeEntityIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getAttributeAccess().getTypeEntityIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getAttributeAccess().getTypeEntityCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


